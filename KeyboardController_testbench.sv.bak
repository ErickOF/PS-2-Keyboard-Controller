module KeyboardController_testbench();
// Inputs
logic clk;
logic ps2_clk;
logic data;

// Outputs
logic [7:0] keycode;

keyboardController uut (.clk(clk), .ps2_clk(ps2_clk), .data(data), .pressedKey(keycode));

initial begin
	clk = 1;
	for(int i = 0; i < 2000; i++) begin
		#1 clk = ~clk;
	end
    
	// Initialize Inputs
	ps2_clk = 1;
	data = 1;

	#100;
		
    #45 data = 0; //START 0
	#5 ps2_clk = 0;
	#50 ps2_clk = 1;
		
	#45 data = 1; //1
	#5 ps2_clk = 0;
	#50 ps2_clk = 1;
		
	#45 data = 0; //2
	#5 ps2_clk = 0;
	#50 ps2_clk = 1;

	#45 data = 1; //3
	#5 ps2_clk = 0;
	#50 ps2_clk = 1;
		
	#45 data = 0; //4
	#5 ps2_clk = 0;
	#50 ps2_clk = 1;
		
	#45 data = 1; //5
	#5 ps2_clk = 0;
	#50 ps2_clk = 1;

	#45 data = 1; //6
	#5 ps2_clk = 0;
	#50 ps2_clk = 1;
		
	#45 data = 1; //7
	#5 ps2_clk = 0;
	#50 ps2_clk = 1;
		
	#45 data = 0; //8
	#5 ps2_clk = 0;
	#50 ps2_clk = 1;
		
	#45 data = 0; //PARITY 9
	#5 ps2_clk = 0;
	#50 ps2_clk = 1;
		
	#45 data = 1;// STOP 10
	#5 ps2_clk = 0;
	#50 ps2_clk = 1;

	// Add stimulus here
	#45 data = 0; //START 0
	#5 ps2_clk = 0;
	#50 ps2_clk = 1;
		
	#45 data = 0; //1
	#5 ps2_clk = 0;
	#50 ps2_clk = 1;
		
	#45 data = 0; //2
	#5 ps2_clk = 0;
	#50 ps2_clk = 1;

	#45 data = 0; //3
	#5 ps2_clk = 0;
	#50 ps2_clk = 1;
		
	#45 data = 0; //4
	#5 ps2_clk = 0;
	#50 ps2_clk = 1;
		
	#45 data = 1; //5
	#5 ps2_clk = 0;
	#50 ps2_clk = 1;

	#45 data = 1; //6
	#5 ps2_clk = 0;
	#50 ps2_clk = 1;
		
	#45 data = 1; //7
	#5 ps2_clk = 0;
	#50 ps2_clk = 1;
		
	#45 data = 1; //8
	#5 ps2_clk = 0;
	#50 ps2_clk = 1;
		
	#45 data = 1; //PARITY 9
	#5 ps2_clk = 0;
	#50 ps2_clk = 1;
		
	#45 data = 1;// STOP 10
	#5 ps2_clk = 0;
	#50 ps2_clk = 1;

	//BRAKE CODE
	#45 data = 0; //START 0
	#5 ps2_clk = 0;
	#50 ps2_clk = 1;
		
	#45 data = 1; //1
	#5 ps2_clk = 0;
	#50 ps2_clk = 1;
		
	#45 data = 0; //2
	#5 ps2_clk = 0;
	#50 ps2_clk = 1;

	#45 data = 1; //3
	#5 ps2_clk = 0;
	#50 ps2_clk = 1;
		
	#45 data = 0; //4
	#5 ps2_clk = 0;
	#50 ps2_clk = 1;
		
	#45 data = 1; //5
	#5 ps2_clk = 0;
	#50 ps2_clk = 1;

	#45 data = 1; //6
	#5 ps2_clk = 0;
	#50 ps2_clk = 1;
		
	#45 data = 1; //7
	#5 ps2_clk = 0;
	#50 ps2_clk = 1;
		
	#45 data = 0; //8
	#5 ps2_clk = 0;
	#50 ps2_clk = 1;
		
	#45 data = 0; //PARITY 9
	#5 ps2_clk = 0;
	#50 ps2_clk = 1;
		
	#45 data = 1;// STOP 10
	#5 ps2_clk = 0;
	#50 ps2_clk = 1;
end

endmodule // KeyboardController_testbench
